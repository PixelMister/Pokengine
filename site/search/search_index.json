{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#introduction","title":"Introduction","text":""},{"location":"#what-is-pokengine","title":"What is Pokengine?","text":"<p>Pokengine is a community-driven platform focused on creating custom content, such as Regions or Dexes. It also offers a browser-based MMO that merges all the user-created content into one expansive game, though Regions can be kept separate and turned into standalone games if their creators prefer. </p> <p>At its core, Pokengine is an engine, not a game itself. The game aspect is built by the users, meaning Pokengine isn\u2019t just one game but a collection of many, all rolled into one.</p> <p>The engine provides a suite of online, browser-based tools specifically designed to help users edit and build their own game worlds.  </p>"},{"location":"#what-is-mapbuilder","title":"What is Mapbuilder?","text":"<p>Mapbuilder is Pokengine\u2019s tool for programming and integrating Tilefuser maps into the game engine. Only users who have been granted access to Mapbuilder can use it to add their maps to the game. </p> <p>Access to Mapbuilder is limited to those developing regions or trusted with the tool, as it provides a high level of control over the game engine.</p> <p>Mapbuilder operates by using your Tilefuser map as a base, allowing you to add objects, NPCs, sprites, animations, and more to bring your map to life in the game. All map elements are implemented using Pokengine\u2019s custom programming language, jCoad, which is the focus of this guide.</p> <p>Before diving into programming, here are a few helpful tips to get you started with Mapbuilder.</p>"},{"location":"#what-is-jcoad","title":"What is jCoad?","text":""},{"location":"#document-version-information","title":"Document Version Information","text":"Info Description Authors Jext, Zermonious, Fuzzy, Twitch, Kyledove, Pixelmister Version 1.1 Last Updated June 2025"},{"location":"About/commonly-asked-questions/","title":"Commonly Asked Questions","text":""},{"location":"About/request-a-feature/","title":"Request a Feature","text":""},{"location":"About/rolesandpermissions/","title":"Roles and Permissions","text":""},{"location":"About/rolesandpermissions/#game-directors","title":"Game Director(s)","text":"<p>Jext &amp; Kyledove, the co-creators and owners of Pokengine, serve as the driving force behind the entire project. As the Game Directors, they hold ultimate responsibility for overseeing every aspect of Pokengine.</p>"},{"location":"About/rolesandpermissions/#jext-technical-lead-game-systems-director","title":"Jext - Technical Lead &amp; Game Systems Director","text":"<p>Jext is the original creator of Pokengine, leads the technical side of Pokengine, overseeing programming, systems, networks, databases, infrastructure, and architecture. They ensure the game\u2019s foundation is robust, scalable, and efficient, managing server architecture, performance, database design, and game mechanics. Jext also leads the technical team, enforcing coding best practices, security, and maintenance, ensuring seamless game functionality and scalability.</p>"},{"location":"About/rolesandpermissions/#kyledove-creative-director","title":"Kyledove - Creative Director","text":"<p>Kyledove shapes the vision of Pokengine, overseeing the game's aesthetic direction, world design, and narrative. As Creative Director, they define the visual style, tone, and atmosphere, ensuring a cohesive and immersive experience. Kyledove also manages content creation, including character design, region development, game features and user experience (UX), maintaining high quality and consistency across all elements.</p>"},{"location":"About/rolesandpermissions/#admin-","title":"Admin -","text":"<p>The Admins play a crucial role in the day-to-day operations of Pokengine, contributing valuable input into key decisions regarding the site, game engine, and Discord community. Their expertise helps shape the direction and functionality of these platforms, and they ultimately report to the CEOs, ensuring that all decisions align with the broader vision and goals set.</p> <p>List of Admins</p>"},{"location":"About/rolesandpermissions/#developer-","title":"Developer -","text":"<p>Developers are responsible for working on the back-end systems and core engine that support the entire Pokengine platform. Their role is crucial in ensuring the game's functionality, performance, and stability across all regions. Developers focus on building and maintaining the infrastructure that allows the game to run smoothly, handling everything from server management to technical optimizations. Their work spans across all regions, but they do not have creative control over the content or direction of individual regions, focusing instead on supporting the game's overall technical foundation.</p> <p>List of Developers</p>"},{"location":"About/rolesandpermissions/#moderator-","title":"Moderator -","text":"<p>Moderators are focused solely on maintaining a safe and respectful environment within the Pokengine community. They have no authority over the game's development or overall direction, their role is to oversee and manage the Discord and in-game chats, ensuring that all interactions remain friendly, appropriate, and in line with community guidelines. Their role is strictly to enforce rules, handle disputes, and provide support to players, working to ensure a pleasant experience for players and users.</p> <p>List of Moderators</p>"},{"location":"About/rolesandpermissions/#region-owner-","title":"Region Owner -","text":"<p>Region Owners are users who have earned the opportunity to develop and curate a unique region within the game. They are responsible for creating and managing the content, layout, and features of their region, providing an engaging experience for players. It is important to note that Region Owners have no authority over other regions, and their role is strictly limited to the development of their own region. They may contribute but do not have authority over the overall development, operations, or direction of the game or any other regions within the platform. </p> <p>List of Region Owners</p>"},{"location":"About/rolesandpermissions/#dex-owners-","title":"Dex Owners -","text":"<p>Dex Owners are users who have earned the privilege of managing and curating their own personal Dex collection. While they may contribute content or ideas to the game, they are users of the platform and have no responsibility or authority in deciding how the game, site, or any other aspects of the project are run.</p> <p>List of Dex Owners</p>"},{"location":"About/rolesandpermissions/#beta-testersplayers-","title":"Beta Testers/Players -","text":"<p>We just want you to enjoy Pokengine!  While you're exploring the game, please keep in mind that you may encounter some bugs. If you happen to come across any issues, we\u2019d really appreciate it if you could report them in the appropriate channels with as much detail as possible \u2013 it helps us make the game better for everyone. However, please note that exploiting bugs or glitches is strictly prohibited.  Thanks for being a part of the adventure!</p>"},{"location":"Code_Library/battle-properties/","title":"Battle Properties","text":"<p>You can set various battle properties, when you call for it to start within an objects code. This applies to both wild battles and trainer battles. The properties are listed below.</p>"},{"location":"Code_Library/battle-properties/#battle-limiters","title":"Battle Limiters","text":""},{"location":"Code_Library/battle-properties/#no-running","title":"No Running","text":"<p>You cannot run from this battle. This is the default setting for trainer battles, so you only need to specify it for wild battles. <pre><code>norun\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#no-catching","title":"No Catching","text":"<p>You cannot catch the opposing Pokemon. This is the default setting for trainer battles, so you only need to specify it for wild battles. <pre><code>nocatch\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#no-money","title":"No Money","text":"<p>You will not earn money from this battle. This is the default setting for wild battles, so you only need to specify it for trainer battles. <pre><code>nomoney\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#no-experience-points","title":"No Experience Points","text":"<p>Your Pokemon will not gain any experience points from this battle. <pre><code>noexp\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#no-item-use","title":"No Item Use","text":"<p>You will not be able to use items from the bag widget during battle. For example, Poke Balls or Potions. <pre><code>noitems\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#fixed-pokemon-level","title":"Fixed Pokemon Level","text":"<p>Forces all Pok\u00e9mon in battle to the specified level. Uses their true stats (IVs, EVs) but calculates the actual stat value (attack, etc) based on the new set level. This works identically to fixed level battles such as the Battle Tower in the mainline games. <pre><code>fixedlevel level\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#hidden-opposing-pokemon-level","title":"Hidden Opposing Pokemon Level","text":"<p>Levels of the opposing Pok\u00e9mon are hidden. Appears as ???. <pre><code>hiddenlevel\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#battle-format","title":"Battle Format","text":""},{"location":"Code_Library/battle-properties/#double-battles","title":"Double Battles","text":"<p>The battle will be changed to the 'double' format of Pokemon battles. This can be applied to both wild and trainer battles. <pre><code>double\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#triple-battles","title":"Triple Battles","text":"<p>The battle will be changed to the 'triple' format of Pokemon battles. This can be applied to both wild and trainer battles. <pre><code>triple\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#pokedex-registration","title":"Pokedex Registration","text":""},{"location":"Code_Library/battle-properties/#not-seen-in-pokedex","title":"Not Seen in Pokedex","text":"<p>The opposing Pokemon in this battle, will not be counted as seen in the Pokedex. <pre><code>noseen\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#battle-scene-alterations","title":"Battle Scene Alterations","text":""},{"location":"Code_Library/battle-properties/#battle-environment-scene","title":"Battle Environment (Scene)","text":"<p>Sets the battle scene (background image) to the one specified. Only necessary for wild battles, as trainer battles have a scene property set in advance. Additional scenes are added for battles, using the scene context menu in the Mapbuilder editor. <pre><code>scene id\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#battle-theme-needs-updating","title":"Battle Theme (needs updating)","text":"<p>Sets the music playing during battle. Currently hosting on Dropbox is supported only. The format is db: for host, then a modified URL which cuts out the https://www.dropbox.com/ part. theme db:s/fo7smcp2luvrikc/BattleTowerSWSHRemix.mp3 \u2014 Sets the theme according to this Dropbox shared URL. <pre><code>theme url\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#examples","title":"Examples","text":""},{"location":"Code_Library/battle-properties/#wild-pokemon-boss","title":"Wild Pokemon Boss","text":"<p>This first example is a boss battle against a wild Pok\u00e9mon. You cannot run or catch it, and the level is hidden. The Pok\u00e9mon\u2019s name is also set to hide its species. Code Example<pre><code>msg(Groouuugoooough!!)&amp;!cry=00bxxu0w&amp;battle=00bxxu0w;level 80;name ???;scene 51;hiddenlevel;nomoney;nocatch;norun\n</code></pre></p>"},{"location":"Code_Library/battle-properties/#battle-tower","title":"Battle Tower","text":"<p>Battle Tower This example is from the HUB Battle Tower. The dialogue in the <code>msg()</code> block and the trainer battle ID are both controlled by a list. The variable <code>var[noblackout]=1</code> is set so that the player will not teleport away if they lose the battle.</p> <p>Similar to the mainline games\u2019 Battle Tower, this battle gives no exp or money, but instead I manually give the player BP if they win (not shown). Items are not allowed, and all participating Pok\u00e9mon are set to level 50 for the duration of the battle. Code Example<pre><code>msg(%list[trainers][n].speech%)&amp;var[noblackout]=1&amp;mapvar[battle]=3&amp;battle=%list[trainers][n].battleid%;noexp;nomoney;noseen;noitems;fixedlevel 50;theme db:s/fo7smcp2luvrikc/BattleTowerSWSHRemix.mp3\n</code></pre></p>"},{"location":"Code_Library/objects/","title":"Object Functions","text":"<p>If you are unsure how to use these object functions, check out the objects tab.</p> <p>Any object function ending with <code>&amp;triggers</code> may have an optional string of game triggers appended to them to execute alongside the function. See Triggers for more information.</p>"},{"location":"Code_Library/objects/#basic-functions","title":"Basic Functions","text":""},{"location":"Code_Library/objects/#xy","title":"XY","text":"<p>Offsets the display of the object.</p> <p><pre><code>xy(x,y)\n</code></pre> x (number) : Set the horizontal offset in pixels. Can be positive or negative values.</p> <p>y (number) : Set the horizontal offset in pixels. Can be positive or negative values.</p> <p>xy(x,y) (number)     : Setting the horizontal and vertical offset together in pixels. Can be positive or negative values.</p>"},{"location":"Code_Library/objects/#solid","title":"Solid","text":"<p>Makes the tile solid. Give a specific direction to customize which edge of the tile is solid. Can be stacked in the same object, to provide two or more directional solids.</p> <p><pre><code>solid(type)\n</code></pre> type (direction) : Allows you to specify which edge direction of the tile is solid. Default: All directions are solid. Options: up, down, left, right, all, race, 0</p>"},{"location":"Code_Library/objects/#non-player-characters-npcs","title":"Non Player Characters (NPCs)","text":"<p>Spawns an NPC on the tile.</p> <p><pre><code>name=npc(skin,direction,path)\n</code></pre> name (string) : Name of the NPC to refer to it elsewhere. It is heavily recommended to use <code>%random%</code>, rather than a custom name as much as possible.</p> <p>skin (skin) : Skin ID number, which is the NPCs overworld sprite.</p> <p>direction (direction) : The NPC's starting direction</p> <p>path (area) : The NPCs path boundary. The NPC will wander around this area randomly..</p>"},{"location":"Code_Library/objects/#messages","title":"Messages","text":"<p>Displays a textbox message after interacting with the tile.</p> <p><pre><code>name.msg(text)&amp;triggers\n</code></pre> name (string) : If a name is given with a dot separator like name<code>.</code>msg, this object function oerates like a property attached to an entity. Omit the dot separator, if not using an NPC.</p> <p>text (string) : Contains the content of the message. Default: Empty textbox.</p>"},{"location":"Code_Library/objects/#answers","title":"Answers","text":"<p>Defines the response to specified answers. Use this code after specifying answer options with the &amp;answers trigger.</p> <p><pre><code>answername=answer(text)\n</code></pre> <pre><code>answername=answer(text)\n</code></pre> <pre><code>answername=name.answer()\n</code></pre> answername (string) : Answer given by the player, such as \"Yes\" or \"No\". If multiple answers have the same name, you can differentiate them using a number <code>#n</code>.</p> <p>#n (number) : If multiple answers have the same name, you may differentiate them using a number.</p> <p>text (string) : Textbox response to the player's answer. Default: Empty textbox.</p>"},{"location":"Code_Library/objects/#dynamic-answers-add-section","title":"Dynamic Answers (add section)","text":"<p>Information</p> <p>codename<pre><code>answername=answer(text)\nanswer#n=answer(text)\nanswer.name=answer()\n</code></pre> answername (string) : Answer given by the player, such as \"Yes\" or \"No\". If multiple answers have the same name, you can differentiate them using a number <code>#n</code>.</p> <p>#n (number) : If multiple answers have the same name, you may differentiate them using a number.</p> <p>text (string) : Textbox response to the player's answer. Default: Empty textbox.</p>"},{"location":"Code_Library/objects/#footprints","title":"Footprints","text":"<p>Draws a sprite footprint, when the player walks offtile.</p> <p><pre><code>prints(sprite,frames,speed,fade,directional)\n</code></pre> sprite (sprite sheet name) : Name of the footprint sprite sheet, uploaded to sprites in Mapbuilder.</p> <p>frames (number) : The number of frames in the sprite sheet.</p> <p>speed (string) : Speed of the animation.</p> <p>fade (number) : Time for the animation to fade in milliseconds (ms).</p> <p>directional (0/1)  : Based on direction? Options: - 0 = No 1 = Yes</p>"},{"location":"Code_Library/objects/#ledge","title":"Ledge","text":"<p>Creates a ledge that can be hopped over in one direction.</p> <p><pre><code>ledge(direction,jump_height,distance)\n</code></pre> direction (direction) : Direction to jump.</p> <p>jump_height (number) : Height to jump in pixels.</p> <p>distance (number) : Distance to jump in pixels. Should be increments of 16.</p> <p>fade (number) : Time for the animation to fade in milliseconds (ms).</p>"},{"location":"Code_Library/objects/#item","title":"Item","text":"<p>Spawns an overworld item or Pok\u00e9mon. If a Pok\u00e9mon is spawned, it will be given to the player, not battled.</p> <p><pre><code>item(id,amount,sprite)\n</code></pre> id (id) : ID of the object to spawn. This can be an item ID number or a Pokemon Generation String.</p> <p>amount (number) : Number of items to give.</p> <p>sprite (sprite sheet | <code>hidden</code>) : Item sprite sheet. Use <code>hidden</code> to make this item invisible. Default: Region Sprite.</p>"},{"location":"Code_Library/objects/#map-transfers-and-movement","title":"Map Transfers and Movement","text":""},{"location":"Code_Library/objects/#spawn","title":"Spawn","text":"<p>Creates a spawn point. Use on entrances, exits or other spawn points.</p> <p><pre><code>spawn(id,direction,move)\n</code></pre> <pre><code>spawn(heal)\n</code></pre> <pre><code>spawn(cave)\n</code></pre> <pre><code>spawn(safari)\n</code></pre> <pre><code>spawn(fly)\n</code></pre> id (number) : A spawn ID number that is unique to the map. This ID can be used to warp players to this spawn point. Options: heal, cave, safari, fly</p> <p>direction (direction) : Direction the player faces when spawning here.</p> <p>move (0/1) [Can be omitted] : Move one tile in the aforementioned direction.</p> <p>fade (number) : Time for the animation to fade in milliseconds (ms).</p>"},{"location":"Code_Library/objects/#warp","title":"Warp","text":"<p>Warps the player to a spawn point.</p> <p><pre><code>warp(map,spawn)&amp;triggers\n</code></pre> map (ID) : The Map ID to warp to.</p> <p>spawn (number) : Spawn point number to warp to.</p>"},{"location":"Code_Library/objects/#door","title":"Door","text":"<p>Creates a door object, that animates when the user walks through it.</p> <p><pre><code>door(sprite,map,spawn)&amp;triggers\n</code></pre> sprite (sprite sheet) : Spawn point number to warp to.</p> <p>map (ID) : The Map ID to warp to.</p> <p>spawn (number) : Spawn point number to warp to.</p>"},{"location":"Code_Library/objects/#moveto","title":"Moveto","text":"<p>Moves the player to the given coordinates by taking the straight-line path.</p> <p><pre><code>moveto(x,y,direction)\n</code></pre> x (number) : X-coordinate of the tile to move to.</p> <p>y (number) : Y-coordinate of the tile to move to.</p> <p>direction (direction) : The direction the player should face while moving. Default: The dirction the player entered the tile facing.</p>"},{"location":"Code_Library/objects/#terrain-actions","title":"Terrain Actions","text":""},{"location":"Code_Library/objects/#cut","title":"Cut","text":"<p>Creates a tree with an image that can be cut down with the move \u201cCut\u201d.</p> <p><pre><code>cut(encounter_list,sprite)[&amp;triggers]\n</code></pre> encounter_list (string) : Encounter list to use when player cuts down the object. See encounters code.</p> <p>sprite (sprite sheet) : Sprite that displays as the object to be cut. Default: Region sprite.</p>"},{"location":"Code_Library/objects/#rock-smash","title":"Rock Smash","text":"<p>Creates a rock or object with an image that can be cut down with the move \u201cRock Smash\u201d.</p> <p><pre><code>rocksmash(encounter_list,sprite)[&amp;triggers]\n</code></pre> encounter_list (string) : Encounter list to use when player smashes the rock or object. See encounters code.</p> <p>sprite (sprite sheet) : Sprite that displays as the rock or object to be smashed. Default: Region sprite.</p>"},{"location":"Code_Library/objects/#surf","title":"Surf","text":"<p>Allows the player to begin surfing across the specified tile area, using the move \"Surf\".</p> <p><pre><code>surf(direction)\n</code></pre> direction (direction) : Direction to begin surfing in. Replace 'direction' with direction name. Default: Surf from any direction.</p>"},{"location":"Code_Library/objects/#strength","title":"Strength","text":"<p>Creates a heavy object that can be pushed with the move \u201cStrength.\u201d</p> <p><pre><code>strength(sprite,slide)[&amp;triggers]\n</code></pre> sprite (sprite sheet) : Sprite that displays as the object to be pushed. Default: Region Sprite.</p> <p>slide (0/1) : Slide in one direction on touch? Default: 0</p>"},{"location":"Code_Library/objects/#overworld-actions-or-effects","title":"Overworld Actions or Effects","text":""},{"location":"Code_Library/objects/#glow","title":"Glow","text":"<p>Creates a circular glow effect around the tile.</p> <p><pre><code>name=glow(radius,color,flicker)\n</code></pre> name (string) : Name of the glow to refer to it elsewhere. Can be <code>%random%</code>.</p> <p>radius (number) : Radius of the glow in pixels.</p> <p>color (rgba) : Colour of the glow, in red, green, blue and alpha channels.</p> <p>flicker (unit interval) : Strength of the flicker, where <code>0</code> is no flicker and <code>1</code> is full flicker.</p>"},{"location":"Code_Library/objects/#slide","title":"Slide","text":"<p>Causes the player to slide in the direction indicated until they hit a solid wall or warp.</p> <p><pre><code>slide(direction)\n</code></pre> direction (direction | stop) : Direction to slide the player in. Use <code>stop</code> to use this tile to stop a player if they are sliding. Default: Player will slide in the direction they were facing.</p>"},{"location":"Code_Library/objects/#spin","title":"Spin","text":"<p>Causes the player to spin in the direction indicated until they hit a solid wall or warp.</p> <p><pre><code>spin(direction)\n</code></pre> direction (direction | stop) : Direction to spin the player in. Use <code>stop</code> to use this tile to stop a player if they are sliding. Default: Player will spin in the direction they were facing.</p>"},{"location":"Code_Library/objects/#height","title":"Height","text":"<p>Creates an invisible wall with the specified height. If short enough, the wall can be jumped over.</p> <p><pre><code>height(height)\n</code></pre> height (number) : Height in pixels the player must jump to cross the tile.</p>"},{"location":"Code_Library/objects/#encounter-effects","title":"Encounter Effects","text":""},{"location":"Code_Library/objects/#encounters","title":"Encounters","text":"<p>Allows encounters of the given type to pop up on this tile. Encounters are created and named for each map.</p> <p><pre><code>encounter(type)\n</code></pre> type (string) : The name of the encounter list, the encounter tile will link to.</p>"},{"location":"Code_Library/objects/#grass","title":"Grass","text":"<p>Creates an animation and overlay over the player while they are on the tile.</p> <p><pre><code>grass(image,frames,speed,overlay_sprite,loop)&amp;triggers\n</code></pre> image (sprite sheet) : Sprite sheet with overlay animation. Frames should be evenly spaced horizontally.</p> <p>frames (number) : Number of frames in the animation sprite sheet.</p> <p>speed (number) : Speed of the animation in frames per second. (s)</p> <p>overlay_sprite (sprite sheet) : Single static sprite to overlay over player.</p> <p>loop (<code>loop</code>) : Use <code>loop</code> to loop the animation indefinitely.</p>"},{"location":"Code_Library/objects/#ripple","title":"Ripple","text":"<p>Creates an animation and overlay over the player while they are on the tile.</p> <p><pre><code>ripple(animation,frames,speed,overlay_sprite,loop)&amp;triggers\n</code></pre> animation (sprite sheet) : Sprite sheet with overlay animation. Frames should be evenly spaced horizontally.</p> <p>frames (number) : Number of frames in the animation sprite sheet.</p> <p>speed (number) : Speed of the animation in frames per second. (s)</p> <p>loop (<code>loop</code>) : Use <code>loop</code> to loop the animation indefinitely.</p>"},{"location":"Code_Library/objects/#additional-functions","title":"Additional Functions","text":""},{"location":"Code_Library/objects/#execute","title":"Execute","text":"<p>Executes game triggers immediately when the map loads. To make the triggers tile specific, use <code>if ontile</code> before this code. See <code>ontile</code>.</p> <p>See the Triggers reference list for a list of triggers to use.</p> <p><pre><code>execute(triggers)\n</code></pre> <pre><code>execute(triggers)&amp;triggers\n</code></pre> <pre><code>&amp;triggers\n</code></pre> triggers (string) : String of triggers to execute. The first trigger should not start with an ampersand, but all chained triggers should.</p>"},{"location":"Code_Library/objects/#heal","title":"Heal","text":"<p>Heals the player\u2019s party and creates a healing animation like the one used in a Pok\u00e9mon Center.</p> <p><pre><code>heal(sprite,ball_width,ball_height,ball_offset_x,ball_offset_y,ball_margin_x,ball_margin_y)\n</code></pre> sprite (sprite sheet) : Healing sprite sheet. Pok\u00e9 Balls must be in the lower left-hand corner. Machine must be in the upper left-hand corner.</p> <p>ball_width (number) : Width of the individual ball sprite in pixels.</p> <p>ball_height (number) : Height of the individual ball sprite in pixels.</p> <p>ball_offset_x (number) : Number of pixels to displace the drawing of the Pok\u00e9 Ball sprites in the x-direction. Default: 0</p> <p>ball_offset_y (number) : Number of pixels to displace the drawing of the Pok\u00e9 Ball sprites in the y-direction. Default: 0</p> <p>ball_margin_x (number) : The number of pixels to draw between the Pok\u00e9 Balls in the x-direction. Default: 0 (touching)</p> <p>ball_margin_y (number) : The number of pixels to draw between the Pok\u00e9 Balls in the y-direction. Default: 0 (touching)</p>"},{"location":"Code_Library/pokemon-generation/","title":"Pokemon Generation","text":"<p>Pokemon are complex creatures. There are dozens of ways in which they can be customised and configured for battling or spawning. </p> <p>Pokemon can be generated through the use of generation strings, which are a series of options separated by semicolons.  For instance,  <code>00bxxu0w,level 25;male</code> would generate a Male, Level 25, Pikachu belonging to the the region, Nintendo. If given to the <code>&amp;battle</code> trigger, a battle with this wild Pokemon would be initiated. If given to the &amp;mon trigger, the Pokemon would be given directly to the player.</p> <p>Pokemon Identification The first option in the generation string should be an identification string. This string identifies the exact Pokemon, stored in one/multiple dexes on Pokengine. </p>"},{"location":"Code_Library/pokemon-generation/#unique-identifier","title":"Unique Identifier","text":"<p>Set the Pokemon\u2019s unique identifier. This is found on their dex page. <pre><code>uid\n</code></pre> <pre><code>id\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#dynamic-levelling","title":"Dynamic Levelling","text":"<p>Allows the Pokemon's level to scale using dynamic levelling. <pre><code>dynamic-level\n</code></pre> <pre><code>d level\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#level","title":"Level","text":"<p>Set the Pokemon\u2019s level. Can be a single number, multiple comma-separated values, or a range of values. Use <code>same</code> if initiating a trade and you want the new Pokemon to be the same level as the traded Pokemon. <pre><code>level levels\n</code></pre> <pre><code>lv levels\n</code></pre> <pre><code>l levels\n</code></pre> Code Example<pre><code>00bxxu0w;level 5\n00bxxu0w;level 5,10,15\n00bxxu0w;level 5-15\n00bxxu0w;level same\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#nickname","title":"Nickname","text":"<p>Set the Pokemon\u2019s nickname. <pre><code>nickname name\n</code></pre> <pre><code>nick name\n</code></pre> <pre><code>name name\n</code></pre> <pre><code>n name\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#genders","title":"Genders","text":"<p>Set the Pokemon's gender to Male. <pre><code>male\n</code></pre> <pre><code>m\n</code></pre></p> <p>Set the Pokemon's gender to Female. <pre><code>female\n</code></pre> <pre><code>f\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#status-effects","title":"Status Effects","text":"<p>Set the Pokemon\u2019s status. A Pokemon's status is determined by stating the affliction, after the word 'status'. <pre><code>status\n</code></pre> <pre><code>q\n</code></pre> Code Examples<pre><code>status asleep\nq asleep\nstatus poisoned\nq poisoned\nstatus burned\nq burned\nstatus badly poisoned\nq badly poisoned\nstatus paralysed\nq paralyzed\n</code></pre> Available Options</p> <p>Frozen, Asleep, Poisoned, Burned, Badly Poisoned, Paralyzed.</p>"},{"location":"Code_Library/pokemon-generation/#current-hp","title":"Current HP","text":"<p>Set the Pokemon's current HP value. This is not Max HP or the HP stat. <pre><code>hp hp\n</code></pre> <pre><code>h hp\n</code></pre> Code Examples<pre><code>hp 20\nh 20\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#pokemon-ability","title":"Pokemon Ability","text":"<p>Set the Pokemon's Ability Slot. Omit code, for a random ability from the Pokemon's dex page. <pre><code>ability ability\n</code></pre> <pre><code>a ability\n</code></pre> Code Examples<pre><code>ability 1\na 1\n</code></pre> Available Options</p> <ul> <li> <p>Omitted | Random Ability from their dex information.</p> </li> <li> <p>1 | This will Pokemon will have the ability designated on their dex page as Ability 1.</p> </li> <li> <p>2 | This will Pokemon will have the ability designated on their dex page as Ability 2.</p> </li> <li> <p>HA | This will Pokemon will have the ability designated on their dex page as Hidden Ability.</p> </li> </ul>"},{"location":"Code_Library/pokemon-generation/#pokemon-nature","title":"Pokemon Nature","text":"<p>Set the Pokemon's Nature to one of twenty four possible options. Omit the code, for a random nature. <pre><code>nature nature\n</code></pre> <pre><code>p nature\n</code></pre> Code Examples<pre><code>nature 1\np 1\n</code></pre> Available Options</p> Nature ID Stat Increase Stat Decrease Random 0 N/A N/A Hardy 1 Atk Atk Lonely 2 Atk Def Brave 3 Atk Spd Adamant 4 Atk Sp.Atk Naughty 5 Atk Sp.Def Bold 6 Def Atk Docile 7 Def Def Relaxed 8 Def Spd Impish 9 Def Sp.Atk Lax 10 Def Sp.Def Timid 11 Spd Atk Hasty 12 Spd Def Serious 13 Spd Spd Jolly 14 Spd Sp.Atk Naive 15 Spd Sp.Def Modest 16 Sp.Atk Atk Mild 17 Sp.Def Def Quiet 18 Spd Spd Bashful 19 Sp.Atk Sp.Atk Rash 20 Sp.Def Sp.Def Calm 21 Sp.Def Atk Gentle 22 Sp.Def Def Sassy 23 Sp.Def Spd Careful 24 Sp.Def Sp.Atk Quirky 25 Sp.Def Sp.Def"},{"location":"Code_Library/pokemon-generation/#pokemon-moves","title":"Pokemon Moves","text":"<p>Set the Pokemon's moveset by referencing the move id. <pre><code>moves moveid1,moveid2,moveid3,moveid4\n</code></pre> <pre><code>o moveid1,moveid2,moveid3,moveid4\n</code></pre> Code Examples<pre><code>moves 077lfqoy (This would place Absorb in Move Slot 1)\no 077lfqoy (This would place Absorb in Move Slot 1)\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#pokemon-held-item","title":"Pokemon Held Item","text":"<p>Set the Pokemon\u2019s held item, through referencing the Item Id. <pre><code>item itemid\n</code></pre> <pre><code>b itemid\n</code></pre> Code Examples<pre><code>item 06a1u97i (This would give the Pokemon a potion.)\nb 06a1u97i (This would give the Pokemon a potion.)\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#pokemon-happinessfriendship-value","title":"Pokemon Happiness/Friendship Value","text":"<p>Set the Pokemon\u2019s happiness/friendship value. Should be between 0 and 255, inclusive. <pre><code>happiness value\n</code></pre> <pre><code>friendship value\n</code></pre> <pre><code>w value\n</code></pre> Code Examples<pre><code>happiness 120 (This would set the happiness/friendship value at 120)\nfriendship 120 (This would set the happiness/friendship value at 120)\nw 120 (This would set the happiness/friendship value at 120)\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#pokemon-eggs","title":"Pokemon Eggs","text":"<p>Set the Pokemon as an egg with the given number of steps required to hatch. Each egg cycle, corresponds to 255 steps.</p> <p><pre><code>egg steps\n</code></pre> <pre><code>y steps\n</code></pre> Code Examples<pre><code>egg 255 (This Pokemon will be generated as an egg and require 255 steps to hatch.)\ny 255 (This Pokemon will be generated as an egg and require 255 steps to hatch.)\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#pokemon-individual-values-ivs","title":"Pokemon Individual Values (IVs)","text":"<p>Set the Pokemon\u2019s IV Values, for each one of its six stats.</p> <p><pre><code>ivs iv_values\n</code></pre> <pre><code>i iv_values\n</code></pre> Code Examples<pre><code>ivs 31,0,31,31,31,31 (This would give the Pokemon, 31 IVs in its HP, Def, Sp.Atk, Sp.Def and Spd stats.)\ni 31,0,31,31,31,31 (This would give the Pokemon, 31 IVs in its HP, Def, Sp.Atk, Sp.Def and Spd stats.)\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#pokemon-effort-values-evs","title":"Pokemon Effort Values (EVs)","text":"<p>Set the Pokemon\u2019s EV Values. Each Pokemon is limited to 508 effort points in total. 252 are required to maximise a stat.</p> <p><pre><code>evs ev_values\n</code></pre> <pre><code>e ev_values\n</code></pre> Code Examples<pre><code>evs 252,0,0,0,4,252 (This would give the Pokemon, 252 EVs in its HP and Spd stats, as well as the four remaning in Sp.Def)\ne 252,0,0,0,4,252 (This would give the Pokemon, 252 EVs in its HP and Spd stats, as well as the four remaning in Sp.Def)\n</code></pre></p>"},{"location":"Code_Library/pokemon-generation/#shiny-pokemon","title":"Shiny Pokemon","text":"<p>Set the Pokemon as shiny or not. Use ? for a random chance of shiny. Use no or 0 for shiny locked.</p> <p><pre><code>shiny value\n</code></pre> <pre><code>s value\n</code></pre> Code Examples<pre><code>shiny 1 (Makes the Pokemon a Shiny Pokemon)\ns 1 (Makes the Pokemon a Shiny Pokemon)\n</code></pre> Available Options</p> Value Function 0/No The Pokemon is Shiny Locked. 1 The Pokemon is now a Shiny Pokemon. 2 The Pokemon is now a Golden Shiny Pokemon. ? The Pokemon has a random chance of being a Shiny Pokemon."},{"location":"Code_Library/pokemon-generation/#pokemon-caught-data","title":"Pokemon Caught Data","text":"<p>Set the Pokemon\u2019s caught data. Caught strings are another type of string that must be formatted. Every option must appear continuously.</p> <p><pre><code>caught caught_string\n</code></pre> <pre><code>c caught_string\n</code></pre> Code Limiters<pre><code>@[time] - Set the time when caught.\nBy[player_id] - Set the player who caught the Pokemon.\nIn[item_id] - Set the Poke Ball the Pokemon was caught in.\nOn[map_id] - Set where the Pokemon was caught.\nLv[level] - Set what level the Pokemon was caught at.\n</code></pre></p>"},{"location":"Code_Library/triggers/","title":"Triggers","text":""},{"location":"Code_Library/triggers/#programming","title":"Programming","text":""},{"location":"Code_Library/triggers/#pause","title":"Pause","text":"<p>Pauses trigger execution for a given amount of time. &amp;pause<pre><code>&amp;pause=ms\n</code></pre> ms(number) : Time in milliseconds to wait before preceding.</p>"},{"location":"Code_Library/triggers/#with","title":"With","text":"<p>Targets the following triggers on the given entity. &amp;with<pre><code>&amp;with=targetname\n</code></pre> targetname(string) : New target name. Default: Re-targets the player.</p>"},{"location":"Code_Library/triggers/#variable","title":"Variable","text":"<p>Updates the variable. &amp;var<pre><code>&amp;var[name]=value\n</code></pre> name(string) : REQUIRED: Name of the variable.</p> <p>value(string) : New value of the variable.</p>"},{"location":"Code_Library/triggers/#map-variable","title":"Map Variable","text":"<p>Updates the map variable. &amp;mapvar<pre><code>&amp;mapvar[name]=value\n</code></pre> name(string) : REQUIRED: Name of the map variable.</p> <p>value(string) : New value of the map variable.</p>"},{"location":"Code_Library/triggers/#event-variable","title":"Event Variable","text":"<p>Updates the event variable. &amp;ev<pre><code>&amp;ev[name]=value\n</code></pre> name(string) : REQUIRED: Name of the event variable.</p> <p>value(string) : New value of the event variable.</p>"},{"location":"Code_Library/triggers/#entity-manipulation","title":"Entity Manipulation","text":""},{"location":"Code_Library/triggers/#freeze","title":"Freeze","text":"<p>Freezes the target and prevents player input. &amp;freeze<pre><code>&amp;freeze=target\n</code></pre> target(string) : Target to freeze. Default: Player</p>"},{"location":"Code_Library/triggers/#unfreeze","title":"Unfreeze","text":"<p>Unfreezes the target and allows player input. &amp;unfreeze<pre><code>&amp;unfreeze=target\n</code></pre> target(string) : Target to unfreeze. Default: Player</p>"},{"location":"Code_Library/triggers/#destroy","title":"Destroy","text":"<p>Unfreezes the target and allows player input. &amp;destroy<pre><code>&amp;destroy=target\n</code></pre> target(string) : Target to destroy. Default: The current target.</p>"},{"location":"Code_Library/triggers/#jump","title":"Jump","text":"<p>Causes the target to jump. &amp;jump<pre><code>&amp;jump=height\n</code></pre> height(number) : Number of pixels the target will jump by. Default: 8 pixels.</p>"},{"location":"Code_Library/triggers/#direction","title":"Direction","text":"<p>Causes the target to face the given direction. &amp;direction<pre><code>&amp;direction=u or &amp;direction=up\n&amp;direction=d or &amp;direction=down\n&amp;direction=l or &amp;direction=left\n&amp;direction=r or &amp;direction=right\n</code></pre> direction(string) : The name of the direction the target will face.</p>"},{"location":"Code_Library/triggers/#path","title":"Path","text":"<p>Moves the target along the given path. &amp;path<pre><code>&amp;path=path\n</code></pre> path(path) : Path for the target to follow. Default: Unsets the current path.</p>"},{"location":"Code_Library/triggers/#speed","title":"Speed","text":"<p>Sets the targets speed. Can be used on the player. &amp;speed<pre><code>&amp;speed=percentage\n</code></pre> percentage(percentage) : Percentage of normal speed. Use <code>50</code> for half speed or <code>200</code> for double speed. Default: 100</p>"},{"location":"Code_Library/triggers/#icon-bubbles","title":"Icon Bubbles","text":"<p>Places an animated icon bubble above the targets head. Can be used on the player. &amp;icon<pre><code>&amp;icon=id\n</code></pre> id(number) : Icon ID to display.</p> <p>Default: Removes any icon.</p> Icon Name ID Symbol Exclamation 1 Ellipses 2 Smiley Face 3 :) Music Note 4 Comma 5 , Joyful Face 6 <sup>_</sup> Heart 7 &lt;3 Sad Face 8 :[ Smiling Face with Open Mouth 9 :D Fish Icon 10 &lt;&gt;&lt; Angry Face 11 &gt;:( Battle 12 Battle Icon Haha 13 Ha Ha No. 1 14 1 No. 2 15 2 No. 3 16 3 No. 4 17 4 No. 5 18 5 Poisoned 19 Surprised Face 20 o_o Shaking Head 21 Question Mark 22 ? Asleep 23 Zzz Sweat Drop 24 Skull (Dead) 25 Big Red Exclamation Mark 26 Spectating Eye 27 Eye Crying/Screaming 28 Egg 29 Egg Flight Icon 30 White Wing on Blue Bg Spanish Flag 31 Spanish Flag Star No 1 32 Number 1 with star on grey bg Star No 2 33 Number 2 with star on grey bg Star No 3 34 Number 3 with star on grey bg Star No 4 35 Number 4 with star on grey bg Star No 5 36 Number 5 with star on grey bg Quest (Not Started) 37 Quest ? Quest (In Progress) 38 Quest ... Quest (Completed) 39 Quest ! Healer 40 + Symbol Shop 41 TM 42 French Flag 43 French Flag Gift 44 Quest Star 45 Quest Star"},{"location":"Code_Library/triggers/#xy-coordinates","title":"XY Coordinates","text":"<p>Instantly warps the target to the specified coordinates on the current map. &amp;xy<pre><code>&amp;xy=x,y\n</code></pre> x(number) : X-coordinate to warp to.</p> <p>y(number) : Y-coordinate to warp to.</p>"},{"location":"Code_Library/triggers/#moveto-coordinates","title":"Moveto Coordinates","text":"<p>Moves the target to the specified coordinates on the current map by taking the straight-line path. &amp;moveto<pre><code>&amp;moveto=x,y,direction\n</code></pre> x(number) : X-coordinate to move to.</p> <p>y(number) : Y-coordinate to move to.</p> <p>direction(string) : Direction to face while moving.</p> <p>Default: Current Direction</p>"},{"location":"Code_Library/triggers/#follow","title":"Follow","text":"<p>Forces the current target to follow another target. &amp;follow<pre><code>&amp;follow=target\n</code></pre> target(string) : Specify the target to follow.</p> <p>Default: Unfollows.</p>"},{"location":"Code_Library/triggers/#behind-player","title":"Behind Player","text":"<p>Puts the current target behind the player. &amp;behindplayer<pre><code>&amp;behindplayer\n</code></pre></p>"},{"location":"Code_Library/triggers/#outfit","title":"Outfit","text":"<p>Sets the target\u2019s skin. &amp;outfit<pre><code>&amp;outfit=skin\n</code></pre> skin(skinid) : Specify the skin ID for the target to change to.</p>"},{"location":"Code_Library/triggers/#texture","title":"Texture","text":"<p>Sets the target\u2019s texture. &amp;texture<pre><code>&amp;texture=sprite\n</code></pre> texture(sprite sheet) : Texture sprite to change to.</p>"},{"location":"Code_Library/triggers/#skin-color","title":"Skin Color","text":"<p>Sets the target\u2019s skin color. &amp;skincolor<pre><code>&amp;skincolor=id\n</code></pre> id(number) : Skin color ID to change to.</p> <p>Default: 0</p>"},{"location":"Feature%20Guides/region-tm-tutors/","title":"Region TMs and Region Tutors","text":""},{"location":"Feature%20Guides/regional-weather-schedule/","title":"Regional Weather Scheduling","text":""},{"location":"Feature%20Guides/trainer-battle-ai/","title":"Trainer Battle AI","text":""},{"location":"How%20To%20Use%20This%20Guide/understanding-objects/","title":"What are objects?","text":"<p>An object is a single 16x16 tile that holds its own special properties to add functionality to the game. The most common objects are simple, such as walls, ledges, or signs, but some objects can be more complex, such as doors, wraps, or stairs.</p> <p>A lot of objects are pre-built within the Mapbuilder already, making your job as a developer even easier! However, you may want to be familiar with creating your own objects in case you need to.</p>"},{"location":"How%20To%20Use%20This%20Guide/understanding-objects/#code-types","title":"Code Types","text":"<p>All objects may contain jCoad to specify their behavior. However, there are three ways that code can be added to an object.</p>"},{"location":"How%20To%20Use%20This%20Guide/understanding-objects/#root-code","title":"Root code","text":"<p>A root code is a global code that is shared across all instances of that object placed on any map. Root code is great for code that must be repeated across multiple ties, such as walls or shorelines. Instead of writing the code in every object you place, you can write it just once and place that object everywhere you need that functionality.</p> Root Code<pre><code>solid()\n</code></pre>"},{"location":"How%20To%20Use%20This%20Guide/understanding-objects/#instance-code","title":"Instance code","text":"<p>Instance code is exclusive code to the single tile the object resides on. This code is written on a single object instance on a single map. Instance code is best for creating a unique event, such as NPC dialogue, that never needs to be repeated.</p> Instance Code<pre><code>msg(I am a unique sign. Only I hold this message!)\n</code></pre>"},{"location":"How%20To%20Use%20This%20Guide/understanding-objects/#comment-code","title":"Comment code","text":"<p>Comment codes won\u2019t be read as code within the coded block. This is useful to comment on how the code below or above the statement will function.</p> <p>Objects can have both root code and instance code. Think of a sign. All signs are solid, but most signs hold a unique message. Therefore, a sign object would probably have the following jCoad:</p> Comment Code<pre><code>//This code demonstrates how a comment works.\n</code></pre> <p>All the jCoad in this guide can be used in both root code and instance code formats.</p>"},{"location":"Mapbuilder/understanding-datatypes/","title":"Understanding Data Types","text":"<p>jCoad does not really have data types, but putting arguments into the proper format for object functions, properties, and triggers is absolutely necessary for your code to work properly. Use this guide to understand how to enter arguments into your jCoad.</p>"},{"location":"Mapbuilder/understanding-datatypes/#binary-values-numerical","title":"Binary Values (Numerical)","text":"<p>A binary digit, representing a boolean value. 1 represents \u201cyes,\u201d \u201con,\u201d or \u201ctrue,\u201d while 0 represents \u201cno,\u201d \u201coff,\u201d or \u201cfalse.\u201d (type) 0/1<pre><code>0/1\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#binary-values-written","title":"Binary Values (Written)","text":"<p>Two options representing a boolean choice:  <code>yes</code> or <code>no</code> (type) 0/1<pre><code>0/1\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#area","title":"Area","text":"<p>An area, represented by two integers separated by an \u201cx.\u201d Use the format <code>mxn</code>, where <code>m</code> and <code>n</code> are integers. (type) area<pre><code>area\nmxn\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#depth","title":"Depth","text":"<p>A depth string that indicates the depth of a sprite or animation drawn in the game. Depth strings consist of a base position and an optional offset. (type) depth<pre><code>depth=()\n</code></pre></p> Value Function map/map+n/map-n Depth offset is relative to the base position on the map. <code>n</code> is the number of pixels in front of the object the player needs to be to appear in front of it. void/void+n/void-n Depth offest is relatvive to the void, or the map background. fore/fore+n/for-n Depth offset is relative to just abouve the foreground or always above the player. back/back+n/back-n Depth offset is relative to just above the background, or always behind the player. bottom/bottom+n/bottom-n Depth offset is relative to the map but behind the shadows. <p>The pixel offsets (<code>+n</code> or <code>-n</code>)especially when working with a depth other than <code>map</code>, are primarily used to place objects relative to one another.</p> Code Examples<pre><code>map+16\nvoid+5\nfore-5\nbottom+293\nfore\nback\n</code></pre>"},{"location":"Mapbuilder/understanding-datatypes/#hex-codes","title":"Hex Codes","text":"<p>A hexadecimal color in the format  `#[0-F]{6} (type) hex<pre><code>#000000 =&gt; Black\n#FFFFFF =&gt; White\n#F75D5D =&gt; Red\n#13A10E =&gt; Green\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#rgb-colour-values","title":"RGB Colour Values","text":"<p>A color given in RGB (red-green-blue) format. Three RGB values separated by commas. (type) rgb<pre><code>255,0,0 =&gt; Red\n232,66,255 =&gt; Pink\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#rgba-colour-values","title":"RGBA Colour Values","text":"<p>A color given in RGBA (red-green-blue-alpha) format. The format is <code>0-255,0-255,0-255,0-1</code>. Only the final number can be a floating-point value. (type) rgb<pre><code>255,0,0,1 =&gt; Red, 100% opacity\n255,0,0,0.5 =&gt; Red, 50% opacity\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#numbers","title":"Numbers","text":"<p>A string of numeric digits, such as <code>256</code> or <code>-3</code>. (type) number<pre><code>1\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#object-direction","title":"Object Direction","text":"<p>A direction the object can face. (type) direction<pre><code>direction=up\ndirection=down\ndirection=left\ndirection=right\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#short-direction","title":"Short Direction","text":"<p>Exactly like <code>direction</code>, but only using the first character. (type) short direction<pre><code>direction=u\ndirection=d\ndirection=l\ndirection=r\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#paths","title":"Paths","text":"<p>A path string that represents a string of tile movements. In their simplest form, path strings specify the number of tiles to move followed by the direction to move in (represented as a single character). For example, <code>3d</code> represents moving 3 tiles down. Multiple moves can be strung together by separating them with commas. Add an asterisk on the end of the string to signify the path should repeat indefinitely. There are also a few special keywords that can be used as shortcuts for some common paths. (type) path<pre><code>1u,3l,3d,2r =&gt; 1 up, 3 left, 3 down, 2 right\n3u,3d* =&gt; 3 up, 3 down, repeat indefinitely\ncircle =&gt; 1r, 1d, 1l, 1u*\nspin =&gt; 0r,0d,0l,0r\ntwirl =&gt; spin once, ending on the direction it initiates with.\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#percentage","title":"Percentage","text":"<p>An integer representing a percentage. (type) percentage<pre><code>0 =&gt; 0%\n50 =&gt; 50%\n75 =&gt; 75%\n100 =&gt; 100%\n200 =&gt; 200%\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#unit-interval","title":"Unit Interval","text":"<p>A floating-point number between 0 and 1 (inclusive). Usually used for representing percentages. (type) unit interval<pre><code>0\n0.125\n0.783\n1\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#pokemon","title":"Pok\u00e9mon","text":"<p>A Pokemon Generation String (type) pok\u00e9mon<pre><code>00bxxu0w,level 25;male\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#object-skin","title":"Object Skin","text":"<p>A special type of parameter used to identify overworld skins. Use the ID of the desired skin. (type) skin<pre><code>johto youngster=01ih0r1l\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#player-outfit-needs-completing","title":"Player Outfit (needs completing)","text":"<p>A special type of parameter used to identify overworld outfits. Use the ID of the desired outfit. (type) outfit<pre><code>johto youngster=01ih0r1l\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#sprite-sheet","title":"Sprite Sheet","text":"<p>A link to an internal sprite sheet (uploaded to Pok\u00e9ngine) that you or another user owns. The format is <code>user_id/sprite_sheet_name</code>. This is accompanied by either <code>.png</code> or <code>.webp</code> as its file type extension. (type) sprite sheet<pre><code>2654/sprites.png\n1995/door.png\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#tileset-sheet-needs-completing","title":"Tileset Sheet (needs completing)","text":"<p>A tileset identification string, which takes the format of !n, where n is the tileset ID. Basically just a number with an exclamation point in front of it. (type) sprite sheet<pre><code>2654/sprites.png\n1995/door.png\n</code></pre></p>"},{"location":"Mapbuilder/understanding-datatypes/#string","title":"String","text":"<p>A string of characters. Some characters may have special meaning for the function or trigger.</p>"},{"location":"Mapbuilder/understanding-definitions/","title":"Understanding Definitions","text":"<p>This guide will focus on several definitions for using jCoad functions, properties and triggers. Anything in parenthesis (represented by <code>( )</code>) is a parameter. Parameters are separated by commas with no spaces between them.</p> <p>Any parameter that is then enclosed in brackets (<code>[,example]</code>) is an optional parameter. These are not required and may not be needed when you are using the object code.</p> <p>Any sets of brackets may be removed and your jCoad will still work properly, but you must be careful to remove the correct set of brackets and optional parameters.</p> <p>Take the following jCoad as an example on how to identify which optional parameters can be taken out at once.</p> <p>animation(image[,depth[,x,y,width,height[,frames[,speed[,loop]]]]])</p> <p>This piece of jCoad can be used in any of the following ways depending on what you may or may not need to include.</p> Example with Optional Parameter Signifier<pre><code>animation(image)\nanimation(image[,depth])\nanimation(image[,depth[,x,y,width,height]])\nanimation(image[,depth[,x,y,width,height[,frames]]]) \nanimation(image[,depth[,x,y,width,height[,frames[,speed]]]]) \nanimation(image[,depth[,x,y,width,height[,frames[,speed[,loop]]]]])\n</code></pre> <p>Now, we only need to remove the brackets to show what we would type into Mapbuilder.</p> Example<pre><code>animation(image)\nanimation(image,depth)\nanimation(image,depth,x,y,width,height)\nanimation(image,depth,x,y,width,height,frames)\nanimation(image,depth,x,y,width,height,frames,speed)\nanimation(image,depth,x,y,width,height,frames,speed,loop)\n</code></pre> <p>The parameter names are only used for documentation. These names will be replaced with arguments that you swap in. Arguments may be a string of characters, a number, a boolean value, or some other format. All data types are documented alongside the parameter lists later in this guide.</p>"},{"location":"Mapbuilder/understanding-variables/","title":"Understanding Syntax","text":""},{"location":"Mapbuilder/understanding-variables/#types-of-variables","title":"Types of Variables","text":"<p>Variables are individual values that are stored to the player to manipulate their ingame experience. Without variables, creating any sort of story or event within the game would be impossible.</p> <p>There are four types of variables. They are different in function, and when they should be reset.</p>"},{"location":"Mapbuilder/understanding-variables/#variables","title":"Variables","text":"Name Code Description Variables var Variables are reset after the game is reloaded by the user. Map Variables mapvar Map Variables are reset after the user switches maps. Event Variables ev Event Variables are stored indefinitely. Due to their permanent nature, these values are used for events and story progression. Region Variables var/mapvar/ev A variable controlled within region parameters, and are set at the initialisation of a region. <p>Using Var/Mapvar/EVs in Debug Mode</p> <p>Be careful when using event variables within the sandbox/debug environment. The more variables that you load onto a player, the more data that may be wasted. To be safe, we advise that when testing that you use other types of variables first, and then switch them to even variables when the map goes public.</p>"},{"location":"Mapbuilder/understanding-variables/#naming-variables","title":"Naming Variables","text":"<p>The most important thing with regard to variables is their name. Since variables are stored to the user as different values, no two triggers within the same region can have the same name. Sure, variables and map variables that are not permanent, may not matter as much as event variables, but any naming conflicts will still cause different values to be overwritten at the wrong times. This may potentially break any coded event for the player. Whilst ev\u2019s,var\u2019s and mapvar\u2019s are locked to a region, it is still advised that the following naming scheme is used for your variables.</p> <p>For naming variables and map variables, begin by using your three-letter region identification code as a prefix for your variable. For example; Otopo would be <code>oto_</code> This will automatically keep your variable exclusive to your maps to avoid naming discrepancies. Next, you should include the name of the map if it is a variable or map variable. Lastly, include a short, one-word identifier for what your variable does in the game. For example\u2026</p>"},{"location":"Mapbuilder/what-is-mapbuilder/","title":"What is Mapbuilder?","text":""},{"location":"Mapbuilder/what-is-mapbuilder/#mapbuilder-tips","title":"Mapbuilder Tips","text":"<ol> <li>Only use one Mapbuilder tab at one time.</li> <li>Multiple tabs may corrupt where your objects are saved.</li> <li>When in doubt, compile your map.</li> <li>To compile, press the \u201csave\u201d button in the \u201cSettings\u201d tab.</li> <li>When you rage, refresh the page.</li> <li>Mapbuilder autosaves, but sometimes an object may not save properly. If you find something on your map is not working, refresh the page. You could possibly find a previously invisible object wreaking havoc on your map due to being in the wrong location.</li> <li>If you want to share, do it with care.</li> <li>Mapbuilder maps are exclusive to you unless you specify its region in the \u201cSettings\u201d tab. Then, all region helpers will be able to view and edit your map as well.</li> <li>Be careful!</li> <li>You, and only you, are responsible for the programming of your region. Be cautious when working with event variables and spawning items and Pokemon.</li> </ol>"},{"location":"Tilefuser/creatingatilemap/","title":"Creating a Tilemap","text":""},{"location":"Tilefuser/creatingatilemap/#the-basics","title":"The Basics","text":"<p>When you load Tilefuser, you will see something like this screenshot opposite: a black box in the center, a tileset on the left, and various menu options and buttons above the tileset. </p>"},{"location":"Tilefuser/introductiontotilefuser/","title":"What is Tilefuser?","text":"<p>Tilefuser is Pokengine\u2019s software to create a map image using sprite tilesets. Anyone can use Tilefuser to create and share maps. If you have permission you can also upload your own tilesets through Tilefuser and implement your Tilefuser maps into the game using Mapbuilder, a separate program.</p> <p>This guide will walk you through the process of creating a map, sharing maps you\u2019ve made, and uploading tilesets.</p>"}]}